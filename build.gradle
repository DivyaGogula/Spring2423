plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.orientalexchange'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
			ext {
				set('springBootAdminVersion', "3.2.3")
					set('snippetsDir', file("build/generated-snippets"))
					set('springCloudVersion', "2023.0.3")
				}

			dependencies {
			/*	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'*/
				implementation 'org.springframework.boot:spring-boot-starter-security'
				implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
				implementation 'org.springframework.boot:spring-boot-starter-validation'
				implementation 'org.springframework.boot:spring-boot-starter-web'
				implementation 'de.codecentric:spring-boot-admin-starter-server'
				implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'
				implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.6.2'
				compileOnly 'org.projectlombok:lombok'
				developmentOnly 'org.springframework.boot:spring-boot-devtools'
				implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
				implementation 'mysql:mysql-connector-java:8.0.32'
                implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.1'
				annotationProcessor 'org.projectlombok:lombok'
				testImplementation 'org.springframework.boot:spring-boot-starter-test'
				testImplementation 'org.springframework.boot:spring-boot-testcontainers'
				testImplementation 'org.testcontainers:junit-jupiter'
				testImplementation 'org.testcontainers:mysql'
				testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
			}

			dependencyManagement {
				imports {
					mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
					mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
						}
					}



			tasks.named('test') {
				useJUnitPlatform()
			}
//jar {
//	manifest {
//		attributes["Class-Path"] = configurations.runtimeClasspath.files.collect { file -> "libs/${file.name}" }
//		attributes["Main-Class"] = "com.orientalExchange.TradingSystemApiApplication"
//	}
//}